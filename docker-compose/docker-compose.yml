version: "3"
services:
  elasticsearch:
    image: elasticsearch:7.4.2
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - check-time

  db-prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - check-time

  db-fluentd:
    # image: nanaones/fluentd:0.0.5
    build:
      context: .
      dockerfile: ./fluentd/dockerfile
    volumes:
      - ./fluentd/fluent.conf:/fluentd/etc/fluent.conf
      - ./log:/logs
    ports:
      - "24220:24220"

    networks:
      - check-time

  db-grafana:
    image: grafana/grafana:latest
    ports: 
      - "13000:3000"
    networks:
      - check-time

  db-postgres:
    image: postgres:12.1-alpine
    restart: always
    volumes:
      - ./query/query.sql:/docker-entrypoint-initdb.d/query.sql
    environment: 
      - LC_ALL=C.UTF-8
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_PORT=5432
    ports: 
      - "5432:5432" 
    networks:
      - check-time

  db-postgres-exporter:
    image: wrouesnel/postgres_exporter:latest
    restart: always
    environment: 
      - DATA_SOURCE_NAME=postgresql://postgres:1234@db-postgres:5432/postgres?sslmode=disable
    ports: 
      - "9187:9187"
    networks:
      - check-time

  python-main:
    # image: nanaones/psycopg-test:0.0.7
    build:
      context: .
      dockerfile: ./psycopg-test/dockerfile
    volumes:
      - ./log:/logs
      - ./psycopg-test/config:/config

    depends_on:
      - db-postgres
    environment:
      loop: 100
      DBMS_PORT: 5432
      DBMS_ADDRESS: db-postgres
      IS_STAND_ALONE: "false"
      CONFIGPATH: /config/config.ini
    networks:
      - check-time

networks:
  check-time: